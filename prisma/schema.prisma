// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model Role {
  id          Int      @id @default(autoincrement())
  name        String   @unique
  description String
  createdAt   DateTime @default(now())
  updatedAt   DateTime?
  deletedAt   DateTime?

  users     User[]
  endpoints RoleEndpoint[]
  roleGrantings RoleGrant[] @relation("role_granting")
  roleGranteds  RoleGrant[] @relation("role_granted")

  @@map("role")
}

model User {
  id        Int       @id @default(autoincrement())
  roleId    Int       @map("role_id")
  email     String    @unique
  name      String
  password  String
  createdAt DateTime  @default(now())
  updatedAt DateTime ?
  deletedAt DateTime?

  role Role @relation(fields: [roleId], references: [id])

  @@map("user")
}

model Endpoint {
  id          Int      @id @default(autoincrement())
  url        String
  method      String
  description String
  createdAt   DateTime @default(now())
  updatedAt   DateTime?

  roles RoleEndpoint[]

  @@unique([url, method])
  @@map("endpoint")
}

model RoleEndpoint {
  roleId     Int      @map("role_id")
  endpointId Int      @map("endpoint_id")
  createdAt  DateTime @default(now())
  updatedAt  DateTime?

  role     Role     @relation(fields: [roleId], references: [id])
  endpoint Endpoint @relation(fields: [endpointId], references: [id])

  @@id([roleId, endpointId])
  @@map("role_endpoint")
}

model RoleGrant {
  roleGrantingId Int      @map("role_granting_id")
  roleGrantedId  Int      @map("role_granted_id")

  roleGranting Role @relation(fields: [roleGrantingId], references: [id], name: "role_granting")
  roleGranted  Role @relation(fields: [roleGrantedId], references: [id], name: "role_granted")

  @@id([roleGrantingId, roleGrantedId])
  @@map("role_grant")
}